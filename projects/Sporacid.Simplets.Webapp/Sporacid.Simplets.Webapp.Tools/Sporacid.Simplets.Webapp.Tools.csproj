<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{26417F76-6185-419C-8F39-5D48F9B53E4F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Sporacid.Simplets.Webapp.Tools</RootNamespace>
    <AssemblyName>Sporacid.Simplets.Webapp.Tools</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="log4net">
      <HintPath>..\packages\log4net.2.0.3\lib\net40-full\log4net.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Collections\Caches\ConfigurableCache.cs" />
    <Compile Include="Collections\Caches\Exceptions\CachingException.cs" />
    <Compile Include="Collections\Caches\IConfigurableCache.cs" />
    <Compile Include="Collections\Caches\Policies\BasePolicy.cs" />
    <Compile Include="Collections\Caches\Policies\ICachePolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Invalidation\ICacheInvalidationPolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Invalidation\TimeBasedInvalidationPolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Locking\BaseLockingPolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Locking\ReaderWriterLockingPolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Locking\ExclusiveLockingPolicy.cs" />
    <Compile Include="Collections\Caches\Policies\Locking\ICacheLockingPolicy.cs" />
    <Compile Include="Collections\Concurrent\BlockingBoundedQueue.cs" />
    <Compile Include="Collections\Concurrent\BlockingPriorityQueue.cs" />
    <Compile Include="Collections\Concurrent\BlockingQueue.cs" />
    <Compile Include="Collections\Caches\ICache.cs" />
    <Compile Include="Collections\Concurrent\IBlockingQueue.cs" />
    <Compile Include="Collections\Dictionary\LinkedDictionary.cs" />
    <Compile Include="Collections\EnumerableExtensions.cs" />
    <Compile Include="Collections\Pooling\DefaultObjectManager.cs" />
    <Compile Include="Collections\Pooling\IObjectManager.cs" />
    <Compile Include="Collections\Pooling\IObjectPool.cs" />
    <Compile Include="Collections\Pooling\ObjectPool.cs" />
    <Compile Include="Events\EventExtensions.cs" />
    <Compile Include="Events\GenericEventArgs.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Reflection\DynamicExtensions.cs" />
    <Compile Include="Reflection\ReflectionExtensions.cs" />
    <Compile Include="Snippets.cs" />
    <Compile Include="Strings\StringExtensions.cs" />
    <Compile Include="Threading\InfiniteTimeout.cs" />
    <Compile Include="Threading\Pooling\Exceptions\ThreadPoolAlreadyShutdownException.cs" />
    <Compile Include="Threading\Pooling\Exceptions\ThreadPoolAlreadyStartedException.cs" />
    <Compile Include="Threading\Pooling\Exceptions\ThreadPoolNotShutdownException.cs" />
    <Compile Include="Threading\Pooling\Exceptions\ThreadPoolNotStartedException.cs" />
    <Compile Include="Threading\Pooling\Exceptions\WaitException.cs" />
    <Compile Include="Threading\Pooling\Exceptions\WaitTimeoutException.cs" />
    <Compile Include="Threading\Pooling\IThreadPool.cs" />
    <Compile Include="Threading\Pooling\Priority.cs" />
    <Compile Include="Threading\Pooling\ThreadPool.cs" />
    <Compile Include="Threading\Pooling\ThreadPoolConfiguration.cs" />
    <Compile Include="Threading\Pooling\ThreadPoolWorker.cs" />
    <Compile Include="Threading\Pooling\WorkItem.cs" />
    <Compile Include="Threading\Pooling\WorkItemCancellationToken.cs" />
    <Compile Include="Threading\Pooling\WorkItemOptions.cs" />
    <Compile Include="Threading\Pooling\WorkItemResult.cs" />
    <Compile Include="Threading\Timers\ITimer.cs" />
    <Compile Include="Threading\Timers\TimeoutTimer.cs" />
    <Compile Include="Threading\Void.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>